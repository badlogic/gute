!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gute=e():t.gute=e()}(self,(function(){return(()=>{"use strict";var t={876:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BLUE=e.GREEN=e.RED=e.BLACK=e.WHITE=void 0,e.WHITE="white",e.BLACK="black",e.RED="red",e.GREEN="green",e.BLUE="blue"},634:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.startGame=void 0;var n=i(607),o=i(677),r=i(974),s=i(380),a=i(233),h=i(52);e.startGame=function(t){(new u).start(t)};var u=function(){function t(){this.resources=[],this.lastFrame=0,this.inited=!1}return t.prototype.getGraphics=function(){return this.graphics},t.prototype.allResourcesLoaded=function(){for(var t=0,e=this.resources;t<e.length;t++)if(!e[t].loaded)return!1;return!0},t.prototype.initResourcesOnFirstClick=function(){if(this.allResourcesLoaded()&&!this.inited){this.inited=!0;for(var t=0,e=this.resources;t<e.length;t++)e[t].initOnFirstClick()}},t.prototype.mouseDownHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var n=this.graphics.canvas;n.focus();var o=n.clientWidth,r=n.clientHeight;t=Math.floor(t/o*n.width),e=Math.floor(e/r*n.height),this.game.onMouseDown(this,t,e)},t.prototype.mouseUpHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var n=this.graphics.canvas,o=n.clientWidth,r=n.clientHeight;t=Math.floor(t/o*n.width),e=Math.floor(e/r*n.height),this.game.onMouseUp(this,t,e)},t.prototype.keyDownHandler=function(t){this.initResourcesOnFirstClick(),this.game.onKeyDown(this,t)},t.prototype.keyUpHandler=function(t){this.game.onKeyUp(this,t)},t.prototype.start=function(t){var e=this;return this.game=t,this.graphics=new s.GraphicsImpl,this.graphics.canvas.addEventListener("mousedown",(function(t){try{0===t.button&&(e.mouseDownHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation())}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mouseup",(function(t){try{0===t.button&&(e.mouseUpHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation())}catch(t){console.log(t)}})),window.addEventListener("keydown",(function(t){e.keyDownHandler(t.key),t.preventDefault(),t.stopPropagation()})),window.addEventListener("keyup",(function(t){e.keyUpHandler(t.key),t.preventDefault(),t.stopPropagation()})),t.init(this),requestAnimationFrame((function(){e.loop()})),this},t.prototype.loop=function(){var t=this,e=(new Date).getTime(),i=0;0!==this.lastFrame&&(i=e-this.lastFrame),this.lastFrame=e,this.graphics.applyFont(),this.game.update(this,i),this.game.render(this,this.graphics),requestAnimationFrame((function(){t.loop()}))},t.prototype.loadMusic=function(t){var e=new a.SoundImpl(t,!0);return this.resources.push(e),e},t.prototype.loadSound=function(t){var e=new a.SoundImpl(t,!1);return this.resources.push(e),e},t.prototype.loadBitmap=function(t){var e=new o.BitmapImpl(t);return this.resources.push(e),e},t.prototype.loadScaledTileset=function(t,e,i,n){var o=new h.TilesetImpl(t,e,i,n);return this.resources.push(o),o},t.prototype.loadTileset=function(t,e,i){var n=new h.TilesetImpl(t,e,i,1);return this.resources.push(n),n},t.prototype.loadFont=function(t,e){return new r.FontImpl(t,e)},t.prototype.loadLDTK=function(t){var e=new n.LDTKWorld;this.resources.push(e);var i=new XMLHttpRequest;return i.open("GET",t,!0),i.onload=function(t){i.responseText&&e.load(JSON.parse(i.responseText))},i.send(null),e},t}()},705:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Keys=void 0;var i=function(){function t(){}return t.ESCAPE_KEY="Escape",t.ENTER_KEY="Enter",t.LEFT_KEY="ArrowLeft",t.RIGHT_KEY="ArrowRight",t.UP_KEY="ArrowUp",t.DOWN_KEY="ArrowDown",t.SPACE_KEY=" ",t.S_KEY="s",t.M_KEY="m",t.A_KEY="a",t.W_KEY="w",t.D_KEY="d",t.CONTROL_KEY="Control",t.META_KEY="Meta",t.ALT_KEY="Alt",t.TAB_KEY="Tab",t}();e.Keys=i},677:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BitmapImpl=void 0;var i=function(){function t(t){var e=this;this.width=0,this.height=0,this.loaded=!1,this.image=new Image,this.image.onload=function(){e.width=e.image.width,e.height=e.image.height,e.loaded=!0},this.image.src=t}return t.prototype.draw=function(t,e,i){t.drawImage(this.image,e,i)},t.prototype.drawScaled=function(t,e,i,n,o){t.drawImage(this.image,e,i,n,o)},t.prototype.initOnFirstClick=function(){},t}();e.BitmapImpl=i},974:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FontImpl=void 0;var i=function(){function t(t,e){this.name=e;var i=document.createElement("style");i.innerHTML="@font-face { font-family: "+e+"; src: url('"+t+"'); } body { font-family: "+e+"; }",document.head.appendChild(i)}return t.prototype.apply=function(t,e){t.font=e+"px "+this.name},t}();e.FontImpl=i},380:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GraphicsImpl=void 0;var n=i(974),o="undefined"!=typeof InstallTrigger,r=function(){function t(t){this.canvas=t,this.width=t.width,this.height=t.height,this.loaded=!0}return t.prototype.draw=function(t,e,i){t.drawImage(this.canvas,e,i)},t.prototype.drawScaled=function(t,e,i,n,o){t.drawImage(this.canvas,e,i,n,o)},t.prototype.getDrawable=function(){return this.canvas},t.prototype.initOnFirstClick=function(){},t}(),s=function(){function t(){this.fontSize=20,this.canvas=document.getElementById("gamecanvas"),this.ctx=this.canvas.getContext("2d",{alpha:!1}),this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.style.imageRendering=o?"crisp-edges":"pixelated",this.font=new n.FontImpl("font.ttf","GuteDefault"),this.font&&this.applyFont()}return t.prototype.fitScreen=function(t){var e=Math.floor(window.innerWidth/t)*t,i=Math.floor(window.innerHeight/t)*t,n=e/t,o=i/t;this.canvas.style.position="absolute",this.canvas.style.top="0px",this.canvas.style.left="0px",this.canvas.width=n,this.canvas.height=o,this.canvas.style.width=e+"px",this.canvas.style.height=i+"px"},t.prototype.copy=function(){var t,e=document.createElement("canvas");return e.width=this.getWidth(),e.height=this.getHeight(),null===(t=e.getContext("2d"))||void 0===t||t.drawImage(this.canvas,0,0),new r(e)},t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.push=function(){this.ctx.save()},t.prototype.pop=function(){this.ctx.restore()},t.prototype.translate=function(t,e){this.ctx.translate(t,e)},t.prototype.scale=function(t,e){this.ctx.scale(t,e)},t.prototype.applyFont=function(){this.font.apply(this.ctx,this.fontSize)},t.prototype.setFont=function(t){this.font=t,this.applyFont()},t.prototype.setFontSize=function(t){this.fontSize=t,this.applyFont()},t.prototype.getStringWidth=function(t){return this.ctx.measureText(t).width},t.prototype.drawString=function(t,e,i,n){this.ctx.fillStyle=n,this.ctx.fillText(i,t,e)},t.prototype.fillRect=function(t,e,i,n,o){this.ctx.fillStyle=o,this.ctx.fillRect(t,e,i,n)},t.prototype.drawBitmap=function(t,e,i){i.draw(this.ctx,t,e)},t.prototype.drawScaledBitmap=function(t,e,i,n,o){o.drawScaled(this.ctx,t,e,i,n)},t}();e.GraphicsImpl=s},233:(t,e)=>{var i,n;Object.defineProperty(e,"__esModule",{value:!0}),e.SoundImpl=void 0,"undefined"!=typeof window&&(i=window.AudioContext||window.webkitAudioContext),"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){o.CURRENT_MUSIC&&(document.hidden?o.CURRENT_MUSIC.stop():o.CURRENT_MUSIC.play(o.CURRENT_MUSIC.volume))}));var o=function(){function t(t,e){var i=this;this.loaded=!1,this.volume=1,this.music=!1,this.url=t,this.music=e;var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onload=function(t){var e=n.response;e&&(i.data=e,i.loaded=!0,i.tryLoad())},n.send(null)}return t.prototype.tryLoad=function(){var e=this;n&&this.data&&n.decodeAudioData(this.data,(function(i){e.buffer=i,t.CURRENT_MUSIC===e&&(t.CURRENT_MUSIC=null,e.play(e.volume))}),(function(t){console.log("Failed to load: "+e.url)}))},t.prototype.initOnFirstClick=function(){n||(n=new i).resume(),this.tryLoad()},t.prototype.play=function(e){this.volume=e,this.buffer?this.music&&(t.CURRENT_MUSIC!==this&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this),this.source)||(this.source=n.createBufferSource(),this.source.buffer=this.buffer,this.gain=n.createGain(),this.source.connect(this.gain),this.gain.connect(n.destination),this.music&&(this.gain.gain.value=0,this.source.loop=!0),this.source.start(0),this.music?this.gain.gain.linearRampToValueAtTime(e,n.currentTime+2):this.gain.gain.value=e):this.music&&(t.CURRENT_MUSIC=this)},t.prototype.stop=function(){if(this.source){if(this.music){this.gain.gain.linearRampToValueAtTime(0,n.currentTime+3);var t=this.source;setTimeout((function(){t.stop()}),4e3)}else this.source.stop();this.source=null}},t}();e.SoundImpl=o},52:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TilesetImpl=void 0;var i=function(){function t(t,e,i,n,o){this.canvas=t,this.width=n,this.height=o,this.x=e,this.y=i,this.loaded=!0}return t.prototype.draw=function(t,e,i){t.drawImage(this.canvas,this.x,this.y,this.width,this.height,e,i,this.width,this.height)},t.prototype.drawScaled=function(t,e,i,n,o){t.drawImage(this.canvas,this.x,this.y,this.width,this.height,e,i,n,o)},t.prototype.initOnFirstClick=function(){},t}(),n=function(){function t(t,e,n,o){var r=this;void 0===o&&(o=1),this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,e*=o,n*=o,this.tileWidth=e,this.tileHeight=n,this.image=new Image,this.image.onload=function(){if(r.scaled(o),r.transformed){r.scanline=Math.floor(r.transformed.width/e);var t=Math.floor(r.transformed.height/n);r.tileCount=t*r.scanline;for(var s=0;s<t;s++)for(var a=0;a<r.scanline;a++)r.bitmaps.push(new i(r.transformed,a*e,s*n,e,n))}r.transformed=null,r.loaded=!0},this.image.src=t}return t.prototype.getTilesAcross=function(){return this.scanline},t.prototype.scaled=function(t){var e=document.createElement("canvas"),i=document.createElement("canvas"),n=e.getContext("2d"),o=i.getContext("2d");if(null!==n&&null!==o&&this.image){e.width=this.image.width,e.height=this.image.height,i.width=this.image.width*t,i.height=this.image.height*t,n.drawImage(this.image,0,0);for(var r=n.getImageData(0,0,this.image.width,this.image.height),s=o.getImageData(0,0,i.width,i.height),a=0;a<r.height;a++)for(var h=0;h<r.width;h++)for(var u=[r.data[4*(a*r.width+h)+0],r.data[4*(a*r.width+h)+1],r.data[4*(a*r.width+h)+2],r.data[4*(a*r.width+h)+3]],l=0;l<t;l++)for(var p=a*t+l,c=0;c<t;c++)for(var d=h*t+c,f=0;f<4;f++)s.data[4*(p*s.width+d)+f]=u[f];o.putImageData(s,0,0),this.transformed=i}},t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t}();e.TilesetImpl=n},607:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=e.Step=e.Path=e.AStarPathFinder=e.Keys=e.BLUE=e.RED=e.GREEN=e.BLACK=e.WHITE=e.startGame=void 0;var n=i(634);Object.defineProperty(e,"startGame",{enumerable:!0,get:function(){return n.startGame}});var o=i(876);Object.defineProperty(e,"WHITE",{enumerable:!0,get:function(){return o.WHITE}}),Object.defineProperty(e,"BLACK",{enumerable:!0,get:function(){return o.BLACK}}),Object.defineProperty(e,"GREEN",{enumerable:!0,get:function(){return o.GREEN}}),Object.defineProperty(e,"RED",{enumerable:!0,get:function(){return o.RED}}),Object.defineProperty(e,"BLUE",{enumerable:!0,get:function(){return o.BLUE}});var r=i(705);Object.defineProperty(e,"Keys",{enumerable:!0,get:function(){return r.Keys}});var s=i(883);Object.defineProperty(e,"AStarPathFinder",{enumerable:!0,get:function(){return s.AStarPathFinder}});var a=i(482);Object.defineProperty(e,"Path",{enumerable:!0,get:function(){return a.Path}});var h=i(844);Object.defineProperty(e,"Step",{enumerable:!0,get:function(){return h.Step}});var u=i(968);Object.defineProperty(e,"LDTKWorld",{enumerable:!0,get:function(){return u.LDTKWorld}})},44:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKEntity=void 0;e.LDTKEntity=function(t,e,i){this.fields={},this.level=t,this.type=i.__identifier,this.x=i.px[0]/e.__gridSize,this.y=i.px[1]/e.__gridSize;for(var n=0,o=i.fieldInstances;n<o.length;n++){var r=o[n];this.fields[r.__identifier]=r.__value}}},191:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKLayer=void 0;var i=function(){function t(t,e){this.name=e.__identifier,this.level=t,this.width=e.__cWid,this.height=e.__cHei;var i=t.world.tilesetScanline,n=t.world.tilesetSize;this.tiles=[];for(var o=0;o<this.width*this.height;o++)this.tiles.push(0);for(var r=0,s=e.gridTiles;r<s.length;r++){var a=s[r],h=Math.floor(a.px[0]/e.__gridSize)+Math.floor(a.px[1]/e.__gridSize)*this.width,u=Math.floor(a.src[0]/n),l=Math.floor(a.src[1]/n)*i+u;this.tiles[h]=l+1}}return t.prototype.get=function(t,e){if(t<0||e<0||t>=this.width||e>=this.height)return 0;var i=t+e*this.width;return this.tiles[i]},t}();e.LDTKLayer=i},641:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKLevel=void 0;var n=i(44),o=i(191),r=function(){function t(t,e){this.layers=[],this.layerByName={},this.entities=[],this.world=t,this.id=e.identifier;for(var i=0,r=e.layerInstances;i<r.length;i++){var s=r[i];if("Entities"===s.__type)for(var a=0,h=s.entityInstances;a<h.length;a++){var u=h[a];this.entities.push(new n.LDTKEntity(this,s,u))}else{var l=new o.LDTKLayer(this,s);this.layers.splice(0,0,l),this.layerByName[l.name]=l}}this.layers.length>0?(this.width=this.layers[0].width,this.height=this.layers[0].height):(this.width=e.pxWid/t.gridSize,this.height=e.pxHei/t.gridSize)}return t.prototype.getFirstEntityOfType=function(t){for(var e=0,i=this.entities;e<i.length;e++){var n=i[e];if(n.type===t)return n}return null},t}();e.LDTKLevel=r},968:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=void 0;var n=i(641),o=function(){function t(){this.levels={},this.gridSize=0,this.tilesetScanline=0,this.tilesetSize=0,this.loaded=!1}return t.prototype.initOnFirstClick=function(){},t.prototype.load=function(t){this.gridSize=t.defaultGridSize;var e=t.defs.tilesets[0];this.tilesetScanline=e.pxWid/e.tileGridSize,this.tilesetSize=e.tileGridSize;for(var i=0,o=t.levels;i<o.length;i++){var r=o[i],s=new n.LDTKLevel(this,r);this.levels[s.id]=s}return this.loaded=!0,this},t}();e.LDTKWorld=o},883:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AStarPathFinder=void 0;var n=i(30),o=i(482),r=function(){function t(t){this.objectPool=[],this.openList=[],this.pathFindCounter=1,this.width=t.getMapWidth(),this.height=t.getMapHeight(),this.map=t,this.open=new Array,this.closed=new Array;for(var e=0;e<this.width*this.height;e++){for(var i=new Array,n=new Array,o=0;o<5;o++)i.push(0),n.push(0);this.open.push(i),this.closed.push(n)}}return t.prototype.clear=function(){for(var t=0;t<this.openList.length;t++)this.objectPool.push(this.openList[t]);this.openList=new Array,this.pathFindCounter++},t.prototype.generatePath=function(t){for(var e=t,i=new o.Path;null!=e;)i.add(e.x,e.y),e=e.parent;return i},t.prototype.blocked=function(t,e,i,n){var o=this.ignoreFinalOccupation&&this.atTarget(i,n);return!this.map.locationDiscovered(i,n)||!!this.map.blocked(this.mover,null,t,e,i,n,o,this.atTarget(i,n))},t.prototype.atTarget=function(t,e){for(var i=0;i<this.mover.getTilesWidth();i++)for(var n=0;n<this.mover.getTilesHeight();n++)if(t+i==this.tx&&e+n==this.ty)return!0;return!1},t.prototype.findPath=function(t,e,i,n,o,r){if(e=Math.floor(e),i=Math.floor(i),this.max=n,this.ignoreFinalOccupation=o,this.mover=t,this.tx=e,this.ty=i,this.blocked(e,i,e,i))return null;for(this.clear(),this.addLocation(null,Math.floor(t.getTileMapX()),Math.floor(t.getTileMapY()));this.openList.length>0;){var s=this.openList[0];if(this.openList.splice(0,1),this.atTarget(s.x,s.y))return this.generatePath(s);this.addLocation(s,s.x+1,s.y),this.addLocation(s,s.x-1,s.y),this.addLocation(s,s.x,s.y+1),this.addLocation(s,s.x,s.y-1)}return null},t.prototype.addLocation=function(e,i,n){var o=i=Math.floor(i),r=n=Math.floor(n),s=t.NONE;if(null!=e&&(o=e.x,(r=e.y)+1==n&&(s=t.NORTH_TO_SOUTH),r-1==n&&(s=t.SOUTH_TO_NORTH),o+1==i&&(s=t.WEST_TO_EAST),o-1==i&&(s=t.EAST_TO_WEST)),this.map.validLocation(i,n)&&this.open[i+n*this.width][s]!=this.pathFindCounter&&this.closed[i+n*this.width][s]!=this.pathFindCounter)if(null!=e&&e.depth>this.max)this.closed[i+n*this.width][s]=this.pathFindCounter;else if(this.map.locationDiscovered(i,n))if(this.blocked(o,r,i,n))this.closed[i+n*this.width][s]=this.pathFindCounter;else{this.open[i+n*this.width][s]=this.pathFindCounter;for(var a=this.createMapNode(i,n,e,this.getHeuristic(i,n)),h=0;h<this.openList.length;h++)if(this.openList[h].h>a.h)return void this.openList.splice(h,0,a);this.openList.push(a)}else this.closed[i+n*this.width][s]=this.pathFindCounter},t.prototype.getHeuristic=function(t,e){var i=Math.abs(this.tx-t),n=Math.abs(this.ty-e);return i*i+n*n},t.prototype.createMapNode=function(t,e,i,o){if(0==this.objectPool.length){var r=new n.MapNode;this.objectPool.push(r)}var s=this.objectPool[0];return this.objectPool.splice(0,1),s.x=t,s.y=e,s.parent=i,s.h=o,s.depth=null!=i?i.depth+1:0,s},t.NORTH_TO_SOUTH=0,t.EAST_TO_WEST=1,t.SOUTH_TO_NORTH=2,t.WEST_TO_EAST=3,t.NONE=4,t}();e.AStarPathFinder=r},30:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MapNode=void 0;e.MapNode=function(){}},482:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Path=void 0;var n=i(844),o=function(){function t(){this.steps=new Array}return t.prototype.add=function(t,e){this.steps.splice(0,0,new n.Step(t,e))},t.prototype.getLastStep=function(){return this.steps[this.steps.length-1]},t.prototype.pop=function(){var t=this.steps[0];return this.steps.splice(0,1),t},t}();e.Path=o},844:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;e.Step=function(t,e){this.x=t,this.y=e}}},e={};return function i(n){var o=e[n];if(void 0!==o)return o.exports;var r=e[n]={exports:{}};return t[n](r,r.exports,i),r.exports}(607)})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,