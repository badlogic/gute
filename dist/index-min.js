!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gute=e():t.gute=e()}(self,(function(){return(()=>{"use strict";var t={634:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.startGame=void 0;var n=i(607),o=i(677),s=i(974),r=i(380),a=i(233),h=i(52);e.startGame=function(t){(new l).start(t)};var l=function(){function t(){this.resources=[],this.lastFrame=0,this.inited=!1}return t.prototype.allResourcesLoaded=function(){for(var t=0,e=this.resources;t<e.length;t++)if(!e[t].loaded)return!1;return!0},t.prototype.initResourcesOnFirstClick=function(){if(this.allResourcesLoaded()&&!this.inited){this.inited=!0;for(var t=0,e=this.resources;t<e.length;t++)e[t].initOnFirstClick()}},t.prototype.mouseDownHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var n=this.graphics.canvas;n.focus();var o=n.clientWidth,s=n.clientHeight;t=Math.floor(t/o*n.width),e=Math.floor(e/s*n.height),this.game.onMouseDown(this,t,e)},t.prototype.mouseUpHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var n=this.graphics.canvas,o=n.clientWidth,s=n.clientHeight;t=Math.floor(t/o*n.width),e=Math.floor(e/s*n.height),this.game.onMouseUp(this,t,e)},t.prototype.keyDownHandler=function(t){this.initResourcesOnFirstClick(),this.game.onKeyDown(this,t)},t.prototype.keyUpHandler=function(t){this.game.onKeyUp(this,t)},t.prototype.start=function(t){var e=this;return this.game=t,this.graphics=new r.GraphicsImpl,this.graphics.canvas.addEventListener("mousedown",(function(t){try{e.mouseDownHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mouseup",(function(t){try{e.mouseUpHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),window.addEventListener("keydown",(function(t){e.keyDownHandler(t.key),t.preventDefault(),t.stopPropagation()})),window.addEventListener("keyup",(function(t){e.keyUpHandler(t.key),t.preventDefault(),t.stopPropagation()})),t.init(this),requestAnimationFrame((function(){e.loop()})),this},t.prototype.loop=function(){var t=this,e=(new Date).getTime(),i=0;0!==this.lastFrame&&(i=e-this.lastFrame),this.lastFrame=e,this.graphics.applyFont(),this.game.update(this,i),this.game.render(this,this.graphics),requestAnimationFrame((function(){t.loop()}))},t.prototype.loadMusic=function(t){var e=new a.SoundImpl(t,!0);return this.resources.push(e),e},t.prototype.loadSound=function(t){var e=new a.SoundImpl(t,!1);return this.resources.push(e),e},t.prototype.loadBitmap=function(t){var e=new o.BitmapImpl(t);return this.resources.push(e),e},t.prototype.loadScaledTileset=function(t,e,i,n){var o=new h.TilesetImpl(t,e,i,n);return this.resources.push(o),o},t.prototype.loadTileset=function(t,e,i){var n=new h.TilesetImpl(t,e,i,1);return this.resources.push(n),n},t.prototype.loadFont=function(t,e){return new s.FontImpl(t,e)},t.prototype.loadLDTK=function(t){var e=new n.LDTKWorld;this.resources.push(e);var i=new XMLHttpRequest;return i.open("GET",t,!0),i.onload=function(t){i.responseText&&e.load(JSON.parse(i.responseText))},i.send(null),e},t}()},705:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Keys=void 0;var i=function(){function t(){}return t.ESCAPE_KEY="Escape",t.ENTER_KEY="Enter",t.LEFT_KEY="ArrowLeft",t.RIGHT_KEY="ArrowRight",t.UP_KEY="ArrowUp",t.DOWN_KEY="ArrowDown",t.SPACE_KEY=" ",t.S_KEY="s",t.M_KEY="m",t.A_KEY="a",t.W_KEY="w",t.D_KEY="d",t.CONTROL_KEY="Control",t.META_KEY="Meta",t.ALT_KEY="Alt",t.TAB_KEY="Tab",t}();e.Keys=i},677:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BitmapImpl=void 0;var i=function(){function t(t){var e=this;this.width=0,this.height=0,this.loaded=!1,this.image=new Image,this.image.onload=function(){e.width=e.image.width,e.height=e.image.height,e.loaded=!0},this.image.src=t}return t.prototype.initOnFirstClick=function(){},t.prototype.getDrawable=function(){return this.image},t}();e.BitmapImpl=i},974:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FontImpl=void 0;var i=function(){function t(t,e){this.name=e;var i=document.createElement("style");i.innerHTML="@font-face { font-family: "+e+"; src: url('"+t+"'); } body { font-family: "+e+"; }",document.head.appendChild(i)}return t.prototype.apply=function(t,e){t.font=e+"px "+this.name},t}();e.FontImpl=i},380:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GraphicsImpl=void 0;var n=i(974),o="undefined"!=typeof InstallTrigger,s=function(){function t(){this.fontSize=20,this.canvas=document.getElementById("gamecanvas"),this.ctx=this.canvas.getContext("2d",{alpha:!1}),this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.style.imageRendering=o?"crisp-edges":"pixelated",this.font=new n.FontImpl("font.ttf","GuteDefault"),this.font&&this.applyFont()}return t.prototype.fitScreen=function(t){var e=Math.floor(window.innerWidth/t)*t,i=Math.floor(window.innerHeight/t)*t,n=e/t,o=i/t;this.canvas.style.position="absolute",this.canvas.style.top="0px",this.canvas.style.left="0px",this.canvas.width=n,this.canvas.height=o,this.canvas.style.width=e+"px",this.canvas.style.height=i+"px"},t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.push=function(){this.ctx.save()},t.prototype.pop=function(){this.ctx.restore()},t.prototype.translate=function(t,e){this.ctx.translate(t,e)},t.prototype.scale=function(t,e){this.ctx.scale(t,e)},t.prototype.applyFont=function(){this.font.apply(this.ctx,this.fontSize)},t.prototype.setFont=function(t){this.font=t,this.applyFont()},t.prototype.setFontSize=function(t){this.fontSize=t,this.applyFont()},t.prototype.drawString=function(t,e,i,n){this.ctx.fillStyle=n,this.ctx.fillText(i,t,e)},t.prototype.fillRect=function(t,e,i,n,o){this.ctx.fillStyle=o,this.ctx.fillRect(t,e,i,n)},t.prototype.drawBitmap=function(t,e,i){this.ctx.drawImage(i.getDrawable(),t,e)},t}();e.GraphicsImpl=s},233:(t,e)=>{var i,n;Object.defineProperty(e,"__esModule",{value:!0}),e.SoundImpl=void 0,"undefined"!=typeof window&&(i=window.AudioContext||window.webkitAudioContext),"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){o.CURRENT_MUSIC&&(document.hidden?o.CURRENT_MUSIC.stop():o.CURRENT_MUSIC.play(o.CURRENT_MUSIC.volume))}));var o=function(){function t(t,e){var i=this;this.loaded=!1,this.volume=1,this.music=!1,this.url=t,this.music=e;var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onload=function(t){var e=n.response;e&&(i.data=e,i.loaded=!0,i.tryLoad())},n.send(null)}return t.prototype.tryLoad=function(){var e=this;n&&this.data&&n.decodeAudioData(this.data,(function(i){e.buffer=i,t.CURRENT_MUSIC===e&&(t.CURRENT_MUSIC=null,e.play(e.volume))}),(function(t){console.log("Failed to load: "+e.url)}))},t.prototype.initOnFirstClick=function(){n||(n=new i).resume(),this.tryLoad()},t.prototype.play=function(e){this.volume=e,this.buffer?this.music&&(t.CURRENT_MUSIC!==this&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this),this.source)||(this.source=n.createBufferSource(),this.source.buffer=this.buffer,this.gain=n.createGain(),this.source.connect(this.gain),this.gain.connect(n.destination),this.music&&(this.gain.gain.value=0,this.source.loop=!0),this.source.start(0),this.music?this.gain.gain.linearRampToValueAtTime(e,n.currentTime+2):this.gain.gain.value=e):this.music&&(t.CURRENT_MUSIC=this)},t.prototype.stop=function(){if(this.source){if(this.music){this.gain.gain.linearRampToValueAtTime(0,n.currentTime+3);var t=this.source;setTimeout((function(){t.stop()}),4e3)}else this.source.stop();this.source=null}},t}();e.SoundImpl=o},52:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TilesetImpl=void 0;var i=function(){function t(t){this.canvas=t,this.width=t.width,this.height=t.height,this.loaded=!0}return t.prototype.getDrawable=function(){return this.canvas},t.prototype.initOnFirstClick=function(){},t}(),n=function(){function t(t,e,n,o){var s=this;void 0===o&&(o=1),this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,e*=o,n*=o,this.tileWidth=e,this.tileHeight=n,this.image=new Image,this.image.onload=function(){var t;if(s.scaled(o),s.transformed){s.scanline=Math.floor(s.transformed.width/e);var r=Math.floor(s.transformed.height/n);s.tileCount=r*s.scanline;for(var a=0;a<r;a++)for(var h=0;h<s.scanline;h++){var l=document.createElement("canvas");l.width=e,l.height=n,null===(t=l.getContext("2d"))||void 0===t||t.drawImage(s.transformed,-h*e,-a*n),s.bitmaps.push(new i(l))}}s.image=null,s.transformed=null,s.loaded=!0},this.image.src=t}return t.prototype.getTilesAcross=function(){return this.scanline},t.prototype.scaled=function(t){var e=document.createElement("canvas"),i=document.createElement("canvas"),n=e.getContext("2d"),o=i.getContext("2d");if(null!==n&&null!==o&&this.image){e.width=this.image.width,e.height=this.image.height,i.width=this.image.width*t,i.height=this.image.height*t,n.drawImage(this.image,0,0);for(var s=n.getImageData(0,0,this.image.width,this.image.height),r=o.getImageData(0,0,i.width,i.height),a=0;a<s.height;a++)for(var h=0;h<s.width;h++)for(var l=[s.data[4*(a*s.width+h)+0],s.data[4*(a*s.width+h)+1],s.data[4*(a*s.width+h)+2],s.data[4*(a*s.width+h)+3]],u=0;u<t;u++)for(var p=a*t+u,d=0;d<t;d++)for(var c=h*t+d,f=0;f<4;f++)r.data[4*(p*r.width+c)+f]=l[f];o.putImageData(r,0,0),this.transformed=i}},t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t}();e.TilesetImpl=n},607:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=e.Step=e.Path=e.AStarPathFinder=e.Keys=e.startGame=void 0;var n=i(634);Object.defineProperty(e,"startGame",{enumerable:!0,get:function(){return n.startGame}});var o=i(705);Object.defineProperty(e,"Keys",{enumerable:!0,get:function(){return o.Keys}});var s=i(883);Object.defineProperty(e,"AStarPathFinder",{enumerable:!0,get:function(){return s.AStarPathFinder}});var r=i(482);Object.defineProperty(e,"Path",{enumerable:!0,get:function(){return r.Path}});var a=i(844);Object.defineProperty(e,"Step",{enumerable:!0,get:function(){return a.Step}});var h=i(968);Object.defineProperty(e,"LDTKWorld",{enumerable:!0,get:function(){return h.LDTKWorld}})},44:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKEntity=void 0;e.LDTKEntity=function(t,e,i){this.fields={},this.level=t,this.type=i.__identifier,this.x=i.px[0]/e.__gridSize,this.y=i.px[1]/e.__gridSize;for(var n=0,o=i.fieldInstances;n<o.length;n++){var s=o[n];this.fields[s.__identifier]=s.__value}}},191:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKLayer=void 0;var i=function(){function t(t,e){this.name=e.__identifier,this.level=t,this.width=e.__cWid,this.height=e.__cHei;var i=t.world.tilesetScanline,n=t.world.tilesetSize;this.tiles=[];for(var o=0;o<this.width*this.height;o++)this.tiles.push(0);for(var s=0,r=e.gridTiles;s<r.length;s++){var a=r[s],h=Math.floor(a.px[0]/e.__gridSize)+Math.floor(a.px[1]/e.__gridSize)*this.width,l=Math.floor(a.src[0]/n),u=Math.floor(a.src[1]/n)*i+l;this.tiles[h]=u+1}}return t.prototype.get=function(t,e){var i=t+e*this.width;return this.tiles[i]},t}();e.LDTKLayer=i},641:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKLevel=void 0;var n=i(44),o=i(191),s=function(){function t(t,e){this.layers=[],this.layerByName={},this.entities=[],this.world=t,this.id=e.identifier;for(var i=0,s=e.layerInstances;i<s.length;i++){var r=s[i];if("Entities"===r.__type)for(var a=0,h=r.entityInstances;a<h.length;a++){var l=h[a];this.entities.push(new n.LDTKEntity(this,r,l))}else{var u=new o.LDTKLayer(this,r);this.layers.splice(0,0,u),this.layerByName[u.name]=u}}this.layers.length>0?(this.width=this.layers[0].width,this.height=this.layers[0].height):(this.width=e.pxWid/t.gridSize,this.height=e.pxHei/t.gridSize)}return t.prototype.getFirstEntityOfType=function(t){for(var e=0,i=this.entities;e<i.length;e++){var n=i[e];if(n.type===t)return n}return null},t}();e.LDTKLevel=s},968:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=void 0;var n=i(641),o=function(){function t(){this.levels={},this.gridSize=0,this.tilesetScanline=0,this.tilesetSize=0,this.loaded=!1}return t.prototype.initOnFirstClick=function(){},t.prototype.load=function(t){this.gridSize=t.defaultGridSize;var e=t.defs.tilesets[0];this.tilesetScanline=e.pxWid/e.tileGridSize,this.tilesetSize=e.tileGridSize;for(var i=0,o=t.levels;i<o.length;i++){var s=o[i],r=new n.LDTKLevel(this,s);this.levels[r.id]=r}return this.loaded=!0,this},t}();e.LDTKWorld=o},883:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AStarPathFinder=void 0;var n=i(30),o=i(482),s=function(){function t(t){this.objectPool=[],this.openList=[],this.pathFindCounter=1,this.width=t.getMapWidth(),this.height=t.getMapHeight(),this.map=t,this.open=new Array,this.closed=new Array;for(var e=0;e<this.width*this.height;e++){for(var i=new Array,n=new Array,o=0;o<5;o++)i.push(0),n.push(0);this.open.push(i),this.closed.push(n)}}return t.prototype.clear=function(){for(var t=0;t<this.openList.length;t++)this.objectPool.push(this.openList[t]);this.openList=new Array,this.pathFindCounter++},t.prototype.generatePath=function(t){for(var e=t,i=new o.Path;null!=e;)i.add(e.x,e.y),e=e.parent;return i},t.prototype.blocked=function(t,e,i,n){var o=this.ignoreFinalOccupation&&this.atTarget(i,n);return!this.map.locationDiscovered(i,n)||!!this.map.blocked(this.mover,null,t,e,i,n,o,this.atTarget(i,n))},t.prototype.atTarget=function(t,e){for(var i=0;i<this.mover.getTilesWidth();i++)for(var n=0;n<this.mover.getTilesHeight();n++)if(t+i==this.tx&&e+n==this.ty)return!0;return!1},t.prototype.findPath=function(t,e,i,n,o,s){if(e=Math.floor(e),i=Math.floor(i),this.max=n,this.ignoreFinalOccupation=o,this.mover=t,this.tx=e,this.ty=i,this.blocked(e,i,e,i))return null;for(this.clear(),this.addLocation(null,Math.floor(t.getTileMapX()),Math.floor(t.getTileMapY()));this.openList.length>0;){var r=this.openList[0];if(this.openList.splice(0,1),this.atTarget(r.x,r.y))return this.generatePath(r);this.addLocation(r,r.x+1,r.y),this.addLocation(r,r.x-1,r.y),this.addLocation(r,r.x,r.y+1),this.addLocation(r,r.x,r.y-1)}return null},t.prototype.addLocation=function(e,i,n){var o=i=Math.floor(i),s=n=Math.floor(n),r=t.NONE;if(null!=e&&(o=e.x,(s=e.y)+1==n&&(r=t.NORTH_TO_SOUTH),s-1==n&&(r=t.SOUTH_TO_NORTH),o+1==i&&(r=t.WEST_TO_EAST),o-1==i&&(r=t.EAST_TO_WEST)),this.map.validLocation(i,n)&&this.open[i+n*this.width][r]!=this.pathFindCounter&&this.closed[i+n*this.width][r]!=this.pathFindCounter)if(null!=e&&e.depth>this.max)this.closed[i+n*this.width][r]=this.pathFindCounter;else if(this.map.locationDiscovered(i,n))if(this.blocked(o,s,i,n))this.closed[i+n*this.width][r]=this.pathFindCounter;else{this.open[i+n*this.width][r]=this.pathFindCounter;for(var a=this.createMapNode(i,n,e,this.getHeuristic(i,n)),h=0;h<this.openList.length;h++)if(this.openList[h].h>a.h)return void this.openList.splice(h,0,a);this.openList.push(a)}else this.closed[i+n*this.width][r]=this.pathFindCounter},t.prototype.getHeuristic=function(t,e){var i=Math.abs(this.tx-t),n=Math.abs(this.ty-e);return i*i+n*n},t.prototype.createMapNode=function(t,e,i,o){if(0==this.objectPool.length){var s=new n.MapNode;this.objectPool.push(s)}var r=this.objectPool[0];return this.objectPool.splice(0,1),r.x=t,r.y=e,r.parent=i,r.h=o,r.depth=null!=i?i.depth+1:0,r},t.NORTH_TO_SOUTH=0,t.EAST_TO_WEST=1,t.SOUTH_TO_NORTH=2,t.WEST_TO_EAST=3,t.NONE=4,t}();e.AStarPathFinder=s},30:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MapNode=void 0;e.MapNode=function(){}},482:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Path=void 0;var n=i(844),o=function(){function t(){this.steps=new Array}return t.prototype.add=function(t,e){this.steps.splice(0,0,new n.Step(t,e))},t.prototype.getLastStep=function(){return this.steps[this.steps.length-1]},t.prototype.pop=function(){var t=this.steps[0];return this.steps.splice(0,1),t},t}();e.Path=o},844:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;e.Step=function(t,e){this.x=t,this.y=e}}},e={};return function i(n){var o=e[n];if(void 0!==o)return o.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,i),s.exports}(607)})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,