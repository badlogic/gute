!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gute=e():t.gute=e()}(self,(function(){return(()=>{"use strict";var t={634:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.startGame=void 0;var o=i(677),n=i(974),r=i(380),s=i(233),a=i(52);e.startGame=function(t){(new h).start(t)};var h=function(){function t(){this.resources=[],this.lastFrame=0,this.inited=!1}return t.prototype.allResourcesLoaded=function(){for(var t=0,e=this.resources;t<e.length;t++)if(!e[t].loaded)return!1;return!0},t.prototype.initResourcesOnFirstClick=function(){if(this.allResourcesLoaded()&&!this.inited){this.inited=!0;for(var t=0,e=this.resources;t<e.length;t++)e[t].initOnFirstClick()}},t.prototype.mouseDownHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var o=this.graphics.canvas;o.focus();var n=o.clientWidth,r=o.clientHeight;t=Math.floor(t/n*o.width),e=Math.floor(e/r*o.height),this.game.onMouseDown(this,t,e)},t.prototype.mouseUpHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var o=this.graphics.canvas,n=o.clientWidth,r=o.clientHeight;t=Math.floor(t/n*o.width),e=Math.floor(e/r*o.height),this.game.onMouseUp(this,t,e)},t.prototype.keyDownHandler=function(t){this.initResourcesOnFirstClick(),this.game.onKeyDown(this,t)},t.prototype.keyUpHandler=function(t){this.game.onKeyUp(this,t)},t.prototype.start=function(t){var e=this;return this.game=t,this.graphics=new r.GraphicsImpl,this.graphics.canvas.addEventListener("mousedown",(function(t){try{e.mouseDownHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mouseup",(function(t){try{e.mouseUpHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),window.addEventListener("keydown",(function(t){e.keyDownHandler(t.key),t.preventDefault(),t.stopPropagation()})),window.addEventListener("keyup",(function(t){e.keyUpHandler(t.key),t.preventDefault(),t.stopPropagation()})),t.init(this),requestAnimationFrame((function(){e.loop()})),this},t.prototype.loop=function(){var t=this,e=(new Date).getTime(),i=0;0!==this.lastFrame&&(i=e-this.lastFrame),this.lastFrame=e,this.graphics.applyFont(),this.game.update(this,i),this.game.render(this,this.graphics),requestAnimationFrame((function(){t.loop()}))},t.prototype.loadMusic=function(t){var e=new s.SoundImpl(t,!0);return this.resources.push(e),e},t.prototype.loadSound=function(t){var e=new s.SoundImpl(t,!1);return this.resources.push(e),e},t.prototype.loadBitmap=function(t){var e=new o.BitmapImpl(t);return this.resources.push(e),e},t.prototype.loadTileset=function(t,e,i){var o=new a.TilesetImpl(t,e,i);return this.resources.push(o),o},t.prototype.loadFont=function(t,e){return new n.FontImpl(t,e)},t}()},705:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Keys=void 0;var i=function(){function t(){}return t.ESCAPE_KEY="Escape",t.ENTER_KEY="Enter",t.LEFT_KEY="ArrowLeft",t.RIGHT_KEY="ArrowRight",t.UP_KEY="ArrowUp",t.DOWN_KEY="ArrowDown",t.SPACE_KEY=" ",t.S_KEY="s",t.M_KEY="m",t.A_KEY="a",t.W_KEY="w",t.D_KEY="d",t.CONTROL_KEY="Control",t.META_KEY="Meta",t.ALT_KEY="Alt",t.TAB_KEY="Tab",t}();e.Keys=i},677:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BitmapImpl=void 0;var i=function(){function t(t){var e=this;this.width=0,this.height=0,this.loaded=!1,this.image=new Image,this.image.onload=function(){e.width=e.image.width,e.height=e.image.height,e.loaded=!0},this.image.src=t}return t.prototype.initOnFirstClick=function(){},t.prototype.getDrawable=function(){return this.image},t}();e.BitmapImpl=i},974:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FontImpl=void 0;var i=function(){function t(t,e){this.name=e;var i=document.createElement("style");i.innerHTML="@font-face { font-family: "+e+"; src: url('"+t+"'); } body { font-family: "+e+"; }",document.head.appendChild(i)}return t.prototype.apply=function(t,e){t.font=e+"px "+this.name},t}();e.FontImpl=i},380:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GraphicsImpl=void 0;var o=i(974),n="undefined"!=typeof InstallTrigger,r=function(){function t(){this.fontSize=20,this.canvas=document.getElementById("gamecanvas"),this.ctx=this.canvas.getContext("2d",{alpha:!1}),this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.style.imageRendering=n?"crisp-edges":"pixelated",this.font=new o.FontImpl("font.ttf","GuteDefault"),this.font&&this.applyFont()}return t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.push=function(){this.ctx.save()},t.prototype.pop=function(){this.ctx.restore()},t.prototype.translate=function(t,e){this.ctx.translate(t,e)},t.prototype.scale=function(t,e){this.ctx.scale(t,e)},t.prototype.applyFont=function(){this.font.apply(this.ctx,this.fontSize)},t.prototype.setFont=function(t){this.font=t,this.applyFont()},t.prototype.setFontSize=function(t){this.fontSize=t,this.applyFont()},t.prototype.drawString=function(t,e,i,o){this.ctx.fillStyle=o,this.ctx.fillText(i,t,e)},t.prototype.fillRect=function(t,e,i,o,n){this.ctx.fillStyle=n,this.ctx.fillRect(t,e,i,o)},t.prototype.drawBitmap=function(t,e,i){this.ctx.drawImage(i.getDrawable(),t,e)},t}();e.GraphicsImpl=r},233:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SoundImpl=void 0;var i,o=window.AudioContext||window.webkitAudioContext;document.addEventListener("visibilitychange",(function(){n.CURRENT_MUSIC&&(document.hidden?n.CURRENT_MUSIC.stop():n.CURRENT_MUSIC.play(n.CURRENT_MUSIC.volume))}));var n=function(){function t(t,e){var i=this;this.loaded=!1,this.volume=1,this.music=!1,this.url=t,this.music=e;var o=new XMLHttpRequest;o.open("GET",t,!0),o.responseType="arraybuffer",o.onload=function(t){var e=o.response;e&&(i.data=e,i.loaded=!0,i.tryLoad())},o.send(null)}return t.prototype.tryLoad=function(){var e=this;i&&this.data&&i.decodeAudioData(this.data,(function(i){e.buffer=i,t.CURRENT_MUSIC===e&&(t.CURRENT_MUSIC=null,e.play(e.volume))}),(function(t){console.log("Failed to load: "+e.url)}))},t.prototype.initOnFirstClick=function(){i||(i=new o).resume(),this.tryLoad()},t.prototype.play=function(e){this.volume=e,this.buffer?this.music&&(t.CURRENT_MUSIC!==this&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this),this.source)||(this.source=i.createBufferSource(),this.source.buffer=this.buffer,this.gain=i.createGain(),this.source.connect(this.gain),this.gain.connect(i.destination),this.music&&(this.gain.gain.value=0,this.source.loop=!0),this.source.start(0),this.music?this.gain.gain.linearRampToValueAtTime(e,i.currentTime+2):this.gain.gain.value=e):this.music&&(t.CURRENT_MUSIC=this)},t.prototype.stop=function(){if(this.source){if(this.music){this.gain.gain.linearRampToValueAtTime(0,i.currentTime+3);var t=this.source;setTimeout((function(){t.stop()}),4e3)}else this.source.stop();this.source=null}},t}();e.SoundImpl=n},52:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TilesetImpl=void 0;var i=function(){function t(t){this.canvas=t,this.width=t.width,this.height=t.height,this.loaded=!0}return t.prototype.getDrawable=function(){return this.canvas},t.prototype.initOnFirstClick=function(){},t}(),o=function(){function t(t,e,o){var n=this;this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,this.tileWidth=e,this.tileHeight=o,this.image=new Image,this.image.onload=function(){var t;n.scanline=Math.floor(n.image.width/e);var r=Math.floor(n.image.height/o);n.tileCount=r*n.scanline;for(var s=0;s<r;s++)for(var a=0;a<n.scanline;a++){var h=document.createElement("canvas");h.width=e,h.height=o,null===(t=h.getContext("2d"))||void 0===t||t.drawImage(n.image,-a*e,-s*o),n.bitmaps.push(new i(h))}n.loaded=!0},this.image.src=t}return t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t}();e.TilesetImpl=o},883:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AStarPathFinder=void 0;var o=i(30),n=i(482),r=function(){function t(t){this.objectPool=[],this.openList=[],this.pathFindCounter=1,this.width=t.getWidth(),this.height=t.getHeight(),this.map=t,this.open=new Array,this.closed=new Array;for(var e=0;e<this.width*this.height;e++){for(var i=new Array,o=new Array,n=0;n<5;n++)i.push(0),o.push(0);this.open.push(i),this.closed.push(o)}}return t.prototype.clear=function(){for(var t=0;t<this.openList.length;t++)this.objectPool.push(this.openList[t]);this.openList=new Array,this.pathFindCounter++},t.prototype.generatePath=function(t){for(var e=t,i=new n.Path;null!=e;)i.add(e.x,e.y),e=e.parent;return i},t.prototype.blocked=function(t,e,i,o){var n=this.ignoreFinalOccupation&&this.atTarget(i,o);return!this.map.locationDiscovered(i,o)||!!this.map.blocked(this.mover,null,t,e,i,o,n,this.atTarget(i,o))},t.prototype.atTarget=function(t,e){for(var i=0;i<this.mover.getWidth();i++)for(var o=0;o<this.mover.getHeight();o++)if(t+i==this.tx&&e+o==this.ty)return!0;return!1},t.prototype.findPath=function(t,e,i,o,n,r){if(e=Math.floor(e),i=Math.floor(i),this.max=o,this.ignoreFinalOccupation=n,this.mover=t,this.tx=e,this.ty=i,this.blocked(e,i,e,i))return null;for(this.clear(),this.addLocation(null,Math.floor(t.getX()),Math.floor(t.getY()));this.openList.length>0;){var s=this.openList[0];if(this.openList.splice(0,1),this.atTarget(s.x,s.y))return this.generatePath(s);this.addLocation(s,s.x+1,s.y),this.addLocation(s,s.x-1,s.y),this.addLocation(s,s.x,s.y+1),this.addLocation(s,s.x,s.y-1)}return null},t.prototype.addLocation=function(e,i,o){var n=i=Math.floor(i),r=o=Math.floor(o),s=t.NONE;if(null!=e&&(n=e.x,(r=e.y)+1==o&&(s=t.NORTH_TO_SOUTH),r-1==o&&(s=t.SOUTH_TO_NORTH),n+1==i&&(s=t.WEST_TO_EAST),n-1==i&&(s=t.EAST_TO_WEST)),!this.map.notValidLocation(i,o)&&this.open[i+o*this.width][s]!=this.pathFindCounter&&this.closed[i+o*this.width][s]!=this.pathFindCounter)if(null!=e&&e.depth>this.max)this.closed[i+o*this.width][s]=this.pathFindCounter;else if(this.map.locationDiscovered(i,o))if(this.blocked(n,r,i,o))this.closed[i+o*this.width][s]=this.pathFindCounter;else{this.open[i+o*this.width][s]=this.pathFindCounter;for(var a=this.createMapNode(i,o,e,this.getHeuristic(i,o)),h=0;h<this.openList.length;h++)if(this.openList[h].h>a.h)return void this.openList.splice(h,0,a);this.openList.push(a)}else this.closed[i+o*this.width][s]=this.pathFindCounter},t.prototype.getHeuristic=function(t,e){var i=Math.abs(this.tx-t),o=Math.abs(this.ty-e);return i*i+o*o},t.prototype.createMapNode=function(t,e,i,n){if(0==this.objectPool.length){var r=new o.MapNode;this.objectPool.push(r)}var s=this.objectPool[0];return this.objectPool.splice(0,1),s.x=t,s.y=e,s.parent=i,s.h=n,s.depth=null!=i?i.depth+1:0,s},t.NORTH_TO_SOUTH=0,t.EAST_TO_WEST=1,t.SOUTH_TO_NORTH=2,t.WEST_TO_EAST=3,t.NONE=4,t}();e.AStarPathFinder=r},30:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MapNode=void 0;e.MapNode=function(){}},482:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Path=void 0;var o=i(844),n=function(){function t(){this.steps=new Array}return t.prototype.add=function(t,e){this.steps.splice(0,0,new o.Step(t,e))},t.prototype.getLength=function(){return this.steps.length},t.prototype.getStep=function(t){return this.steps[t]},t.prototype.getLastStep=function(){return this.steps[this.steps.length-1]},t.prototype.pop=function(){var t=this.getStep(0);return this.steps.splice(0,1),t},t}();e.Path=n},844:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;e.Step=function(t,e){this.x=t,this.y=e}}},e={};function i(o){var n=e[o];if(void 0!==n)return n.exports;var r=e[o]={exports:{}};return t[o](r,r.exports,i),r.exports}var o={};return(()=>{var t=o;Object.defineProperty(t,"__esModule",{value:!0}),t.Step=t.Path=t.AStarPathFinder=t.Keys=t.startGame=void 0;var e=i(634);Object.defineProperty(t,"startGame",{enumerable:!0,get:function(){return e.startGame}});var n=i(705);Object.defineProperty(t,"Keys",{enumerable:!0,get:function(){return n.Keys}});var r=i(883);Object.defineProperty(t,"AStarPathFinder",{enumerable:!0,get:function(){return r.AStarPathFinder}});var s=i(482);Object.defineProperty(t,"Path",{enumerable:!0,get:function(){return s.Path}});var a=i(844);Object.defineProperty(t,"Step",{enumerable:!0,get:function(){return a.Step}})})(),o})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,